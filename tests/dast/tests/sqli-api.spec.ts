import { test, expect } from '@playwright/test';const JAVA_VULN=process.env.JAVA_SPRING_VULN||'http://localhost:8085/search?q=';const JAVA_SECURE=process.env.JAVA_SPRING_SECURE||'http://localhost:8086/search?q=';const DOTNET_VULN=process.env.DOTNET_VULN||'http://localhost:5055/search?name=';const DOTNET_SECURE=process.env.DOTNET_SECURE||'http://localhost:5056/search?name=';const POS="' OR '1'='1'--";const NEG="' OR '1'='2'--";test('Java Spring: boolean-based heuristic', async ({ request }) => {const pos = await request.get(JAVA_VULN + encodeURIComponent(POS));const neg = await request.get(JAVA_VULN + encodeURIComponent(NEG));expect((await pos.text()).length - (await neg.text()).length).toBeGreaterThan(10);});test('Java Spring: secure blocks boolean-based', async ({ request }) => {const pos = await request.get(JAVA_SECURE + encodeURIComponent(POS));const neg = await request.get(JAVA_SECURE + encodeURIComponent(NEG));expect(Math.abs((await pos.text()).length - (await neg.text()).length)).toBeLessThan(10);});test('ASP.NET Core: boolean-based heuristic', async ({ request }) => {const pos = await request.get(DOTNET_VULN + encodeURIComponent(POS));const neg = await request.get(DOTNET_VULN + encodeURIComponent(NEG));expect((await pos.text()).length - (await neg.text()).length).toBeGreaterThan(10);});test('ASP.NET Core: secure blocks boolean-based', async ({ request }) => {const pos = await request.get(DOTNET_SECURE + encodeURIComponent(POS));const neg = await request.get(DOTNET_SECURE + encodeURIComponent(NEG));expect(Math.abs((await pos.text()).length - (await neg.text()).length)).toBeLessThan(10);});